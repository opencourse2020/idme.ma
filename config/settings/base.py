"""
Django settings for mascaw project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import sys
from email.utils import parseaddr
from django.conf.locale.en import formats as en_formats
from django.contrib.messages import constants as messages

import environ
from django.utils.translation import gettext_lazy as _


en_formats.DATE_FORMAT = 'd-m-y'

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = environ.Path(__file__) - 3
#print(BASE_DIR)
env = environ.Env()
env.read_env(os.path.join(BASE_DIR, ".env"))
_ENV = env.str("DJANGO_SETTINGS_MODULE", "config.settings.base")
#FIREBASE_CRED = env("FIREBASE_SCRED")
#creed = os.path.join(BASE_DIR, FIREBASE_CRED)

# PROJECT_DIR = os.path.join(BASE_DIR, os.pardir)
#
# TENANT_APPS_DIR = os.path.join(PROJECT_DIR, os.pardir)
# sys.path.insert(0, TENANT_APPS_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str("DJANGO_SECRET_KEY", default="!!!SET DJANGO_SECRET_KEY!!!",)
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DJANGO_DEBUG", False)

ALLOWED_HOSTS = []


# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "django.contrib.humanize",
    'widget_tweaks',
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    'allauth.mfa',
    # 'allauth.socialaccount.providers.apple',
    # "allauth.socialaccount.providers.facebook",
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.github',
    # 'allauth.socialaccount.providers.twitter',
    # 'allauth.socialaccount.providers.instagram',
    # 'allauth.socialaccount.providers.telegram',
    'rest_framework',
    'rest_framework_swagger',
    "modeltranslation",
    "crispy_forms",
    "crispy_bootstrap5",
    "django_filters",
    "guardian",
    "django_extensions",
    # "admin_honeypot",
    "honeypot",
    # "captcha",
    'corsheaders',
    "idme.profiles.apps.ProfilesConfig",
    "idme.api.apps.IdmeConfig",
    # "api.chat.apps.ChatConfig",
]

ACCOUNT_DEFAULT_HTTP_PROTOCOL ="https"

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'user_language_middleware.UserLanguageMiddleware',
    "allauth.account.middleware.AccountMiddleware",

]

MFA_ADAPTER = "allauth.mfa.adapter.DefaultMFAAdapter"
MFA_RECOVERY_CODE_COUNT = 10
# The number of recovery codes.

MFA_TOTP_PERIOD = 30
# The period that a TOTP code will be valid for, in seconds.

MFA_TOTP_DIGITS = 6
# The number of digits for TOTP codes.

CORS_ORIGIN_ALLOW_ALL = True

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "idme/templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "idme.api.context_processors.signupaccountform",
                "idme.api.context_processors.loginaccountform",

            ],

        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"

#to handle error too many redirect
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')



# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

# LANGUAGES = (
#     ("fr", _("French")),
#     ("ar", _("العربية")),
#     ("en", _("English")),
# )
LANGUAGES = (
    ("en", _("English")),
    ("fr", _("Français")),
    ("ar", _("العربية")),

)


LANGUAGE_CODE = "en"
MODELTRANSLATION_FALLBACK_LANGUAGES = ["en", "fr", "ar"]
LOCALE_PATHS = [os.path.join(BASE_DIR, "locale/")]

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = [str(BASE_DIR("idme/static"))]
STATIC_ROOT = str(BASE_DIR("static"))
MEDIA_URL = "/media/"
MEDIA_ROOT = str(BASE_DIR("media"))

# ADMINS = tuple(parseaddr(email) for email in admins_data)

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': '',
            'secret': '',

        },
        'SCOPE': ['profile', 'email', ],
        'AUTH_PARAMS': {'access_type': 'online'},
        'METHOD': 'oauth2',
        'VERIFIED_EMAIL': True,
    },
    'github': {
        'APP': {
            'client_id': '',
            'secret': '',

        }
    }

}

# Project adjustments
AUTH_USER_MODEL = "profiles.User"
admins_data = env.tuple(
    "DJANGO_ADMINS", default="Open Course <syndicma2020@gmail.com>"
)
DOMAIN = "https://idme.ma"

# Third-party syndicma settings
AUTHENTICATION_BACKENDS = (
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
    # "idme.profiles.IdmeAPIBackend.MyAuthenticationBackend",
    "guardian.backends.ObjectPermissionBackend",

)
SITE_ID = 1
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

SOCIALACCOUNT_LOGIN_ON_GET = True
SOCIALACCOUNT_AUTO_SIGNUP = True
ACCOUNT_EMAIL_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = "username_email"
ACCOUNT_EMAIL_VERIFICATION = "optional"
ACCOUNT_FORMS = {"signup": "idme.profiles.forms.ProfileCreateForm", "login": "idme.profiles.forms.SignInForm",
                 'reset_password': 'idme.profiles.forms.MyResetPasswordForm'}
LOGIN_REDIRECT_URL = "profiles:dispatch_login"

ACCOUNT_LOGOUT_REDIRECT_URL = "account_login"

LOGIN_URL = "account_login"
#LOGIN_URLS = '/accounts/login/'

LOGIN_EXEMPT_URLS = (
    r'^admin/$',
    r'^accounts/logout/$',
    r'^accounts/login/$',
    r'^accounts/signup/$',
    r'^accounts/password/change/$',
    r'^accounts/password/set/$',
    r'^accounts/password/reset/done/$',
    r"^password/reset/key/(?P<uidb36>[0-9A-Za-z]+)-(?P<key>.+)/$",
    r'^accounts/password/reset/key/done/$',
    r'^accounts/password/reset/$',
)

WEBHOOK_ENDPOINT_SECRET = ''
# # trial period
# TRIALPERIOD = 90

GUARDIAN_RENDER_403 = True
GUARDIAN_TEMPLATE_403 = "403.html"
GUARDIAN_MONKEY_PATCH = False

# Security settings
CSRF_COOKIE_HTTPONLY = True
# ADMIN_URL = "admin/"

# Delete on production
# ACCOUNT_LOGOUT_ON_GET = True

# CRONJOBS = [
#     ('*/1 * * * *', 'mascaw.core.cron.scheduled_job')
# ]


# Image resize config
DJANGORESIZED_DEFAULT_SIZE = [1920, 1080]
DJANGORESIZED_DEFAULT_QUALITY = 100
DJANGORESIZED_DEFAULT_KEEP_META = True
DJANGORESIZED_DEFAULT_FORCE_FORMAT = 'JPEG'
DJANGORESIZED_DEFAULT_FORMAT_EXTENSIONS = {'JPEG': ".jpg"}
DJANGORESIZED_DEFAULT_NORMALIZE_ROTATION = True


RECAPTCHA_REQUIRED_SCORE = 0.85
SILENCED_SYSTEM_CHECKS = ['captcha.recaptcha_test_key_error']

MESSAGE_TAGS = {
    messages.DEBUG: 'debug',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'danger',  # 'danger' corresponds to Bootstrap's alert-danger
}